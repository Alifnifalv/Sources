using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using Eduegate.Framework.Enums;
using Eduegate.Services.Contracts.Catalog;
using Eduegate.Framework.Contracts.Common;
using Eduegate.Services.Contracts.Accounting;
using Eduegate.Services.Contracts.Mutual;

namespace Eduegate.Services.Contracts
{
    // NOTE: You can use the "Rename" command on the "Refactor" menu to change the interface name "ITransactionEngine" in both code and config file together.
    [ServiceContract]
    public interface IAccountingTransaction
    {
        //[OperationContract]
        //[WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetAllTransaction?referenceTypes={referenceTypes}&transactionStatus={transactionStatus}")]
        //List<TransactionHeadDTO> GetAllTransaction(DocumentReferenceTypes referenceTypes, Eduegate.Framework.Enums.TransactionStatus transactionStatus);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetCustomerAccountMap?CustomerID={CustomerID}&EntitlementID={EntitlementID}")]
        CustomerAccountMapsDTO GetCustomerAccountMap(long CustomerID, int EntitlementID);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetSupplierAccountMap?SupplierID={SupplierID}&EntitlementID={EntitlementID}")]
        SupplierAccountEntitlmentMapsDTO GetSupplierAccountMap(long SupplierID, int EntitlementID);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetProductInventory?skuID={skuID}")]
        List<ProductInventoryDTO> GetProductInventory(long skuID);

        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json,
            BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "AddAccountTransactions")]
        bool AddAccountTransactions(List<AccountTransactionsDTO> dto);

        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json,
           BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "DeleteAccountTransactions")]
        bool DeleteAccountTransactions(List<long> ids);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetVoucher?TransactionHeadID={TransactionHeadID}")]
        VoucherMasterDTO GetVoucher(long TransactionHeadID);

        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json,
        BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "UpdateAccountTransactionProcessStatus")]
        bool UpdateAccountTransactionProcessStatus(TransactionHeadDTO dto);


        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetInvetoryTransactionsByTransactionHeadID?TransactionHeadID={TransactionHeadID}")]
        List<InvetoryTransactionDTO> GetInvetoryTransactionsByTransactionHeadID(long TransactionHeadID);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetAutoGeneratedAccounts?AccountID={AccountID}&noOfChildAccounts={noOfChildAccounts}&Entity={Entity}&Entitlment={Entitlment}")]
        List<AccountDTO> GetAutoGeneratedAccounts(long AccountID, int noOfChildAccounts, string Entity, string Entitlment);


        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetEntitlementsByHeadId?headId={headId}")]
        List<EntitlementMapDTO> GetEntitlementsByHeadId(long headId);


        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json,
        BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "SaveAccountTransactionHead")]
        AccountTransactionHeadDTO SaveAccountTransactionHead(AccountTransactionHeadDTO dto);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetAccountTransactionHeadById?headId={headId}")]
        AccountTransactionHeadDTO GetAccountTransactionHeadById(long headId);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "AdditionalExpensesTransactionsMap?additionalExpenseData={additionalExpenseData}&accountTransactionHeadIID={accountTransactionHeadIID}&referenceID={referenceID}&documentStatus={documentStatus}")]
        string AdditionalExpensesTransactionsMap(List<AdditionalExpensesTransactionsMapDTO> additionalExpenseData, long accountTransactionHeadIID, long referenceID, short documentStatus);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "AdditionalExpensesTransactionsMap?additionalExpenseData={additionalExpenseData}&accountTransactionHeadIID={accountTransactionHeadIID}&referenceID={referenceID}")]
        List<AdditionalExpensesTransactionsMapDTO> GetAdditionalExpensesTransactions(List<AdditionalExpensesTransactionsMapDTO> additionalExpenseData, long accountTransactionHeadIID, long referenceID);
       

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetReceivablesByAccountId?AccountID={AccountID}&docType={docType}")]
        List<ReceivableDTO> GetReceivablesByAccountId(long AccountID, Eduegate.Services.Contracts.Enums.DocumentReferenceTypes docType);

        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json,
        BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "AddReceivables")]
        bool AddReceivables(List<ReceivableDTO> dtos);

        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json,
        BodyStyle = WebMessageBodyStyle.Bare, UriTemplate = "AddPayables")]
        bool AddPayables(List<PayableDTO> dtos);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetPayablesByAccountId?AccountID={AccountID}&docType={docType}")]
        List<PayableDTO> GetPayablesByAccountId(long AccountID, Eduegate.Services.Contracts.Enums.DocumentReferenceTypes docType);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetAccountTransactionHeads?referenceTypes={referenceTypes}&transactionStatus={transactionStatus}")]
        List<AccountTransactionHeadDTO> GetAccountTransactionHeads(DocumentReferenceTypes referenceTypes, Eduegate.Framework.Enums.TransactionStatus transactionStatus);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetAllMissionJobEntryHeads?referenceTypes={referenceTypes}&transactionStatus={transactionStatus}")]
        List<JobEntryHeadAccountingDTO> GetAllMissionJobEntryHeads(DocumentReferenceTypes referenceTypes, Eduegate.Framework.Enums.TransactionStatus transactionStatus);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetProductSKUMapByID?ProductSKUMapIID={ProductSKUMapIID}")]
        List<ProductSKUCostDTO> GetProductSKUMapByID(long ProductSKUMapIID);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetVendorCustomerAccounts?searchText={searchText}")]
        List<KeyValueDTO> GetVendorCustomerAccounts(string searchText);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "Get_AllSuppliers_Accounts?searchText={searchText}")]
        List<KeyValueDTO> Get_AllSuppliers_Accounts(string searchText);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "Get_AllCustomers_Accounts?searchText={searchText}")]
        List<KeyValueDTO> Get_AllCustomers_Accounts(string searchText);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "Get_AllDrivers_Accounts?searchText={searchText}")]
        List<KeyValueDTO> Get_AllDrivers_Accounts(string searchText);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetChildAccounts_ByParentAccountId?searchText={searchText}&ParentAccountId={ParentAccountId}")]
        List<KeyValueDTO> GetChildAccounts_ByParentAccountId(string searchText, long ParentAccountId);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetGLAccounts?searchText={searchText}")]
        List<KeyValueDTO> GetGLAccounts(string searchText);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetPaymentModes")]
        List<KeyValueDTO> GetPaymentModes();

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetCustomerPendingInvoices?customerID={customerID}")]
        List<ReceivableDTO> GetCustomerPendingInvoices(long customerID);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetSupplierPendingInvoices?suplierID={suplierID}")]
        List<PayableDTO> GetSupplierPendingInvoices(long suplierID);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetGLAccountByCode?code={code}")]
        AccountDTO GetGLAccountByCode(string code);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetTransactionEntitlementByHeadId?headId={headId}")]
        List<TransactionHeadEntitlementMapDTO> GetTransactionEntitlementByHeadId(long headId);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetReceivables?receivableIds={receivableIds}")]
        List<ReceivableDTO> GetReceivables(List<long> receivableIds);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetAllocatedReceivables?receivableId={receivableId}")]
        ReceivableDTO GetAllocatedReceivables(long receivableId);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "GetPayables?payableIds={payableIds}")]
        List<PayableDTO> GetPayables(List<long> payableIds);

        [OperationContract]
        [WebInvoke(Method = "POST", ResponseFormat = WebMessageFormat.Json, UriTemplate = "SaveReceivables}")]
        List<ReceivableDTO> SaveReceivables(List<ReceivableDTO> receivables);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "SavePayables")]
        List<PayableDTO> SavePayables(List<PayableDTO> payables);

        [OperationContract]
        [WebInvoke(Method = "GET", ResponseFormat = WebMessageFormat.Json, UriTemplate = "ClearPostedData")]
        bool ClearPostedData(long accountingHeadID);
    }
}
