@model Eduegate.Web.Library.ViewModels.BaseMasterViewModel
@using System.Reflection;
@using Eduegate.ERP.Admin.Helpers;
@using Eduegate.Framework.Mvc.Attributes;
@using Eduegate.Framework.Extensions;
@using Eduegate.Frameworks.Mvc.Attributes;

@{
    var containerAttribute = (ContainerTypeAttribute)Model.GetType().GetCustomAttributes(typeof(ContainerTypeAttribute)).FirstOrDefault();
    Model.NamePrefix = Model.NamePrefix + "_" + ViewBag.WindowName;

    var detailMetadata = containerAttribute == null ? "CRUDModel.Model.DetailViewModel" : containerAttribute.BindingPrefix;
    var modelCollectionChildGrid = Model as System.Collections.IList;
    var modelCollections = Model as System.Collections.IList;
    var childsGridColspan = containerAttribute == null ? "" : string.Concat("colspan='", containerAttribute.Colspan, "'");

    IEnumerable<PropertyInfo> gridFields;
    var orderBy = (OrderAttribute)Model.GetType().GetCustomAttributes(typeof(OrderAttribute)).FirstOrDefault();

    if (orderBy == null)
    {
        gridFields = Model.GetType().GetProperties();
    }
    else
    {
        gridFields = Model.GetType().GetProperties().Where(a => a.GetCustomAttribute(typeof(OrderAttribute), false) != null).OrderBy(a => (a.GetCustomAttribute(typeof(OrderAttribute), false) as OrderAttribute).Order);

    }

    var gridBinding = ViewBag.GridBinding == null ? "detail" : ViewBag.GridBinding;

    var gridColumnCount = 0;
    var pagination = (PaginationAttribute)Model.GetType().GetCustomAttributes(typeof(PaginationAttribute)).FirstOrDefault();
    var pageSize = pagination?.PageSize;
    ViewBag.GridSearchModelName = detailMetadata;
}

<tr ng-click="RowSelected($event);" ng-repeat="@gridBinding in @detailMetadata | filter : @(ViewBag.GridSearchModelName)_SearchQuery @(pagination != null ? Html.Raw(" | pagination: (GridPagination['" + ViewBag.GridSearchModelName + "'] - 1) * ItemsPerPage | limitTo: ItemsPerPage") : "") track by $index" @Html.Raw(containerAttribute?.ContainerAttribute)>
    @if (Model.IsHierarchicalGrid)
    {
        @Html.Raw("<td " + childsGridColspan + " class='Some-Child-Grid'><table class='Some-Child-Grid'><tr class='Some-Child-Grid'>");
    }

    @foreach (var property in gridFields)
    {
        var title = (System.ComponentModel.DisplayNameAttribute)property.GetCustomAttributes(typeof(System.ComponentModel.DisplayNameAttribute)).FirstOrDefault();
        var controlType = (ControlTypeAttribute)property.GetCustomAttributes(typeof(ControlTypeAttribute)).FirstOrDefault();
        gridColumnCount++;

        var claimType = (HasClaimAttribute)property.GetCustomAttributes(typeof(HasClaimAttribute)).FirstOrDefault();

        if (claimType != null)
        {
            var allClaims = (ViewBag.Claims as List<Eduegate.Web.Library.ViewModels.Security.ClaimViewModel>);
            var allClaimNames = allClaims.Select(a => a.ResourceName).ToList();
            if (!claimType.HasAccess(allClaimNames))
            {
                continue;
            }
        }

        if (title != null && controlType != null)
        {
            if (property.Name.Equals("SerialNo"))
            {
                <td @Html.Raw((string.IsNullOrEmpty(controlType.Css) ? string.Empty : "class=\"" + controlType.Css + "\""))>{{$index +1}}</td>
            }
            else
            {
                <td @controlType.ControlType.ToString() @Html.Raw((string.IsNullOrEmpty(controlType.Css) ? string.Empty : "class=\"" + controlType.Css + "\""))>
                    @switch (controlType.ControlType)
                    {

                        case Eduegate.Framework.Enums.ControlTypes.RowIndicator:
                            <label class="status-color green" style=""></label>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.CheckBox:
                            <label class="checkboxwrap">
                                <input type="checkbox" class="zoomin" ng-model="@gridBinding.@property.Name" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes)) />
                                <span class="checkboxinner">&nbsp;</span>
                            </label>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.TextBox:
                            if (property.PropertyType == typeof(double?) || property.PropertyType == typeof(double) || property.PropertyType == typeof(decimal) || property.PropertyType == typeof(decimal?))
                            {
                                <input autocomplete="off" selectonclick step={{ getStep() }} ng-model="@gridBinding.@property.Name" value="{{@gridBinding.@property.Name | number : @ViewBag.DefaultDecimalPoints}}" type="text" id="@(property.Name)_{{$index}}" ng-change="@(string.IsNullOrEmpty(controlType.Attributes2) ? "UpdateDetailGridValues('" + @property.Name + "' , " + gridBinding + ", {{$index + 1}})" :
                                controlType.Attributes2 + "(" + gridBinding + ");")"
                                       @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes)) @Html.GetValidationAttributes(Html.TextBox(property.Name), property.Name + "_{{$index}}")>
                            }
                            else
                            {
                                <input autocomplete="off" selectonclick ng-model="@gridBinding.@property.Name" type="text" id="@(property.Name)_{{$index}}" ng-change="@(string.IsNullOrEmpty(controlType.Attributes2) ? "UpdateDetailGridValues('" + @property.Name + "' , " + gridBinding + ", {{$index + 1}})" :
                                controlType.Attributes2 + "(" + gridBinding + ");")"
                                    @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes)) @Html.GetValidationAttributes(Html.TextBox(property.Name), property.Name + "_{{$index}}")>
                            }

                            @Html.ValidationMessage(@property.Name + "_{{$index}}" + property.Name);
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.TextBoxWithPickButton:
                            <input ng-model="@gridBinding.@property.Name" type="text" id="@(property.Name)_{{$index}}" ng-change="@(string.IsNullOrEmpty(controlType.Attributes2) ? "UpdateDetailGridValues('" + @property.Name + "' , " + gridBinding + ", {{$index + 1}})" : 
                            controlType.Attributes2 + "(" + gridBinding + ");")"
                                   @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes)) @Html.GetValidationAttributes(Html.TextBox(property.Name), property.Name + "_{{$index}}")>
                            @Html.ValidationMessage(@property.Name + "_{{$index}}" + property.Name);
                            @*<span class="codestatus save" title="Pick" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes2) ? string.Empty : controlType.Attributes2))><i class="fa fa-search-plus"></i></span>*@
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.Hidden:
                            <input ng-model="@gridBinding.@property.Name" type="hidden" id="{{$index}}_@property.Name" ng-change="@(string.IsNullOrEmpty(controlType.Attributes2) ? "UpdateDetailGridValues('" + @property.Name + "' , " + gridBinding + ", {{$index + 1}})" : 
                            controlType.Attributes2 + "(" + gridBinding + ");")"
                                   @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.HiddenWithLabel:
                            <input type="hidden" id="{{$index}}_@property.Name" value="@Html.Raw(controlType.Attributes)">
                            <label class="control-label"><span ng-bind="@gridBinding.@property.Name @(property.PropertyType.Name == "Double" ? "| number : " + ViewContext.ViewBag.DefaultDecimalPoints : string.Empty)" /><span class="redcolor"></span></label>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.TextBoxWithPopup:
                            <input selectonclick ng-class="detail.IsError == true ? 'input-validation-error' : ''" ng-model="detail.@property.Name" type="text" id="{{$index}}_@property.Name"
                                   ng-change="@(string.IsNullOrEmpty(controlType.Attributes2) ? "UpdateDetailGridValues('" + @property.Name + "' , " + gridBinding + ", {{$index + 1}})" : controlType.Attributes2 + "(" + gridBinding + ");")"
                                   @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                            <div class="popupwindow" ng-show="detail.IsQuantityPopup">
                                <span class="fa fa-close" ng-click="PoupClose(detail);"></span>
                                <table>
                                    <thead>
                                        <tr>
                                            <th>Serial No#</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div class="popupwindow-inner">
                                    <table>
                                        <tbody>
                                            <tr ng-repeat="data in detail.@(string.IsNullOrEmpty(controlType.Attributes4) ? "SKUDetails": controlType.Attributes4)" class="popuprow">
                                                <td>
                                                    <input ng-focus="data.IsError" type="text" ng-blur="SerialKeyDuplicationCheck($event)" class="textleft" id="{{$index}}_skudetail_@property.Name" name="{{$index}}_skudetail_@property.Name" ng-model="data.SerialNo"
                                                           ng-attr-placeholder="{{ detail.ProductLength > 0 ? detail.ProductLength +' Digit '  : undefined}} Serial No."
                                                           ng-attr-maxlength="{{detail.ProductLength > 0 ? detail.ProductLength  : undefined}}">
                                                    <span class="redcolor" ng-show="data.IsError">{{data.ErrorMessage}}</span>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.TextBoxWithDynamicPopup:
                            <input selectonclick ng-class="detail.IsError == true ? 'input-validation-error' : ''" ng-model="detail.@property.Name" type="text" id="{{$index}}_@property.Name"
                                   ng-change="@(string.IsNullOrEmpty(controlType.Attributes2) ? "UpdateDetailGridValues('" + @property.Name + "' , " + gridBinding + ", {{$index + 1}})" : controlType.Attributes2 + "(" + gridBinding + ");")"
                            @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>

                            // Dynamically get the collection from the model using Attributes4.
                            @if (!string.IsNullOrEmpty(controlType.Attributes4))
                            {
                                var modelType = Model.GetType();
                                var property2 = modelType.GetProperty(controlType.Attributes4);

                                if (property2 != null)
                                {
                                    var value = property2.GetValue(Model, null) as System.Collections.IList;
                                    if (value != null)
                                    {
                                        modelCollections = value;
                                    }
                                }
                            }

                            <div class="popupwindow" ng-show="detail.IsShowDynamicPopup">
                                <span class="fa fa-close" ng-click="DynamicPoupClose(detail);"></span>
                                <div class="popupwindow-inner">
                                    <table>
                                        <tbody>
                                            @if (modelCollections.Count > 0)
                                            {
                                                @await Html.PartialAsync("_GridBuildField", modelCollections[0]);
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.DropDown:
                            var lookUpType = (LookUpAttribute)property.GetCustomAttributes(typeof(LookUpAttribute)).FirstOrDefault();
                            <div class="controls brand">
                                <select @Html.GetValidationAttributes(Html.DropDownList(property.Name, Enumerable.Empty<SelectListItem>()), Model.NamePrefix)
                                        ng-model="@gridBinding.@property.Name" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                                    <i class="fa fa-caret-down"></i>
                                    <option ng-repeat="data in @lookUpType.DataSource" value={{data.Key}}>{{data.Value}}</option>
                                </select>
                                <i class="dropdownarrow fa fa-caret-down"></i>
                                @Html.ValidationMessage(Model.NamePrefix + property.Name)
                            </div>
                                        break;
                                    case Eduegate.Framework.Enums.ControlTypes.Select2:
                                        ViewBag.RowName = gridBinding;
                            <div style="display:flex;flex:0px 0px 100%">
                                @{
                                    await Html.RenderPartialAsync("~/Areas/Frameworks/Views/Controls/_Select2.cshtml", property);
                                }
                            </div>
                            break;
                                    case Eduegate.Framework.Enums.ControlTypes.Label:

                                        if (property.PropertyType == typeof(double?) || property.PropertyType == typeof(double) || property.PropertyType == typeof(decimal) || property.PropertyType == typeof(decimal?))
                                        {
                                <label class="control-label"><span ng-bind="@gridBinding.@property.Name | number : @ViewContext.ViewBag.DefaultDecimalPoints" /><span class="redcolor"></span></label>
                            }
                            else
                            {
                                <label class="control-label"><span ng-bind="@gridBinding.@property.Name" /><span class="redcolor"></span></label>
                            }
                            
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.LabelWithTextBox:
                            <label class="control-label"><span ng-bind="@gridBinding.@(controlType.OptionalControlName)" /><span class="redcolor"></span></label>
                            <input selectonclick ng-model="@gridBinding.@property.Name" type="text" id="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', @gridBinding)"
                                   @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                            break;

                        case Eduegate.Framework.Enums.ControlTypes.LabelWithTextBoxAndUpdateVerify:
                            <label class="control-label"><span ng-bind="@gridBinding.@(controlType.OptionalControlName)" /><span class="redcolor"></span></label>
                            <span class="codewrap b-code">
                                <input selectonclick verified="{{@gridBinding.Is@(property.Name)}}" ng-model="@gridBinding.@property.Name" type="text" id="{{$index}}_@property.Name"
                                       name="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', @gridBinding)"
                                       @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))
                                       @Html.GetValidationAttributes(Html.TextBox(property.Name), Model.NamePrefix)>
                                <span class="codestatus invalid" ng-show="!@gridBinding.Is@(property.Name)"><i class="fa fa-close"></i></span>
                                <span class="codestatus valid" ng-show="@gridBinding.Is@(property.Name)"><i class="fa fa-check"></i></span>
                            </span>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.LabelWithTextBoxAndUpdateVerifyWithCopy:
                            <label class="control-label"><span ng-bind="detail.@(controlType.OptionalControlName)" /><span class="redcolor"></span></label>
                            <span class="codewrap b-code">
                                <input selectonclick verified="{{detail.Is@(property.Name)}}" ng-model="detail.@property.Name" type="text" id="{{$index}}_@property.Name"
                                       name="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', @gridBinding)"
                                       @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))
                                       @Html.GetValidationAttributes(Html.TextBox(property.Name), Model.NamePrefix)>
                                <span class="codestatus invalid" ng-show="!detail.Is@(property.Name)"><i class="fa fa-close"></i></span>
                                <span class="codestatus valid" ng-show="detail.Is@(property.Name)"><i class="fa fa-check"></i></span>
                                <span class="codestatus gridicon" title="Copy" ng-click="Copy(detail, 'detail.@property.Name')"><i class="fa fa-copy"></i></span>
                            </span>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.LabelWithTextBoxAndUpdateVerifyWithSave:
                            <label class="control-label"><span ng-bind="detail.@(controlType.OptionalControlName)" /><span class="redcolor"></span></label><br />
                            <span class="codewrap location">
                                <input selectonclick verified="{{detail.Is@(property.Name)}}" ng-model="detail.@property.Name" type="text" id="{{$index}}_@property.Name"
                                       name="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', @gridBinding)"
                                       @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))
                                       @Html.GetValidationAttributes(Html.TextBox(property.Name), Model.NamePrefix)>
                                <span class="codestatus invalid" ng-show="!detail.Is@(property.Name)"><i class="fa fa-close"></i></span>
                                <span class="codestatus valid" ng-show="detail.Is@(property.Name)"><i class="fa fa-check"></i></span>
                                <span class="codestatus save" title="Save" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes2) ? string.Empty : controlType.Attributes2))><i class="fa fa-save"></i></span>
                                <span class="codestatus gridicon" title="Copy" ng-click="Copy(detail, 'detail.@property.Name')"
                                      @Html.Raw((string.IsNullOrEmpty(controlType.Attributes3) ? string.Empty : controlType.Attributes3))><i class="fa fa-copy"></i></span>
                            </span>

                            break;
                        case Eduegate.Framework.Enums.ControlTypes.Button:
                            <a @Html.Raw(controlType.Attributes) class="button-orange ">@title.DisplayName</a>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.IconButton:
                            <!-- Trigger Button -->
                            <a @Html.Raw(controlType.Attributes) class="button-orange" data-bs-toggle="modal" data-bs-target="#OrderPopup_@ViewBag.WindowName">
                                <i class="fa fa-external-link"></i>&nbsp;
                            </a>

                            {
                                modelCollections = property.GetValue(Model, null) as System.Collections.IList;
                            }

                            <!-- Bootstrap Modal -->
                            <div class="modal fade" id="OrderPopup_@ViewBag.WindowName" data-bs-backdrop="static" tabindex="-1" aria-labelledby="dynamicPopupLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable" style="z-index:1000000">
                                    <div class="modal-content">
                                        <!-- Modal Header -->
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="dynamicPopupLabel">@title.DisplayName</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>

                                        <!-- Modal Body -->
                                        <div class="modal-body">
                                            <div class="table-responsive h-600px">

                                                <table class="table model-table">
                                                    <tbody>
                                                        @if (modelCollections != null && modelCollections.Count > 0)
                                                        {
                                                            @await Html.PartialAsync("_GridBuildField", modelCollections[0]);
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                                <td colspan="100%">No data available.</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>

                                        <!-- Modal Footer -->
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.YesNoCheckBox:
                            @*@Html.CheckBox(Model.NamePrefix + property.Name, new { @ng_model = bindingPrefix + "." + property.Name });*@
                            var randomControlID = new Random().Next().ToString();

                            <div class="slidebtn">
                                <input type="checkbox" id="assigned_@(randomControlID){{$index}}" ng-model="@gridBinding.@property.Name" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes)) />
                                <label for="assigned_@(randomControlID){{$index}}"><i></i></label>
                            </div><!-- /slidebtn -->
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.Image:
                            <img ng-src="{{@gridBinding.@property.Name}}" alt="" />
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.DateTimePicker:
                            <div class="controls">
                                <div class="datetime_picker">
                                    <input datetimepicker ng-model="@gridBinding.@property.Name" type="text" id="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', @gridBinding, {{$index + 1}})"
                                           @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.DatePicker:
                            <div class="controls">
                                <div class="datetime_picker">
                                    <input autocomplete="off" skien-Datepicker ng-model="@gridBinding.@property.Name" type="text" id="{{$index}}_@property.Name"
                                           ng-change="@(string.IsNullOrEmpty(controlType.Attributes2)? "UpdateDetailGridValues('@property.Name', "+gridBinding+", {{$index + 1}})" : controlType.Attributes2 +"("+gridBinding+");")"
                                    @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.TimePicker:
                            <div class="controls">
                                <div class="datetime_picker">
                                    <input timepicker ng-model="@gridBinding.@property.Name" type="text" id="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', @gridBinding, {{$index + 1}})"
                                           @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes))>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.PopupGrid:
                            <div class="popupwindow" ng-show="@gridBinding.IsQuantityPopup">
                                <span class="fa fa-close" ng-click="PoupClose(@gridBinding);"></span>
                                @{
                                    var modelCollection = property.GetValue(Model, null) as System.Collections.IList;
                                }
                                <div class="controls fullcolumn-layout">
                                    <table id="GridTable" class="fullcolumn-layout grid">
                                        @if (modelCollection.Count > 0)
                                        {
                                            @await Html.PartialAsync("_GridBuildField", modelCollection[0]);
                                        }
                                    </table>
                                </div>
                            </div>
                            break;
                        case Eduegate.Framework.Enums.ControlTypes.TextBoxWithButton:
                            <span class="codewrap location">
                                <input selectonclick verified="{{detail.Is@(property.Name)}}" ng-model="detail.@property.Name" type="text" id="{{$index}}_@property.Name" name="{{$index}}_@property.Name" ng-change="UpdateDetailGridValues('@property.Name', detail)"
                                       @Html.Raw((string.IsNullOrEmpty(controlType.Attributes) ? string.Empty : controlType.Attributes)) @Html.GetValidationAttributes(Html.TextBox(property.Name), Model.NamePrefix)>
                                <span class="codestatus save" title="Generate" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes2) ? string.Empty : controlType.Attributes2))><i class="fa fa-cloud-download"></i></span>
                                <span class="codestatus gridicon" title="View Status" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes4) ? string.Empty : controlType.Attributes4))><i class="fa fa-eye"></i></span>
                                <span class="codestatus gridicon" title="Print" @Html.Raw((string.IsNullOrEmpty(controlType.Attributes3) ? string.Empty : controlType.Attributes3))><i class="fa fa-print"></i></span>
                                @*@Html.ValidationMessage("{{$index}}_" + @property.Name)*@
                            </span>
                            <div class="popupwindow">
                                <span class="fa fa-close" ng-click="PoupClose(@gridBinding);"></span>
                                <table>
                                    <thead>
                                        <tr>
                                            <th>Generate AWB No#</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div class="popupwindow-inner">
                                    <div class="fieldpopup"></div>
                                </div>
                            </div>
                            break;

                        case Eduegate.Framework.Enums.ControlTypes.Grid:
                            modelCollectionChildGrid = property.GetValue(Model, null) as System.Collections.IList;

                            if (modelCollectionChildGrid.Count > 0)
                            {
                                if (property.Name.Equals("ChildGrid"))
                                {
                                    ViewBag.GridBinding = "childGrid";
                                    @await Html.PartialAsync("~/Views/Shared/_BuildGridRows.cshtml", modelCollectionChildGrid[0])
                                }
                            }

                            break;

                        case Eduegate.Framework.Enums.ControlTypes.ExpandCollapseButton:
                            <div class="controls text-center">
                                <a @Html.Raw(controlType.Attributes) ng-click="ExpandCollapase($event, @gridBinding, '@property.Name')">
                                    <i ng-if="gridBinding.@property.Name" class="fa  fa fa-angle-double-down"></i>
                                    <i ng-if="!gridBinding.@property.Name" class="fa  fa fa-angle-double-up"></i>
                                </a>
                            </div>
                            break;

                        case Eduegate.Framework.Enums.ControlTypes.GridGroup:
                            var groupCollection = property.GetValue(Model, null) as System.Collections.IList;                            
                            <tr>
                                <td class="@controlType.Css" @Html.Raw(controlType.Attributes2) @Html.Raw(controlType.Attributes4)>
                                    <table class="fullcolumn-layout grid">
                                        @if (groupCollection != null && groupCollection.Count > 0)
                                        {
                                            await Html.RenderPartialAsync("_GridBuildField", groupCollection[0]);
                                        }
                                    </table>
                                </td>
                            </tr>
                            break;
                    }
                </td>
                }
            }
        }
    @if (Model.IsHierarchicalGrid)
    {
        @Html.Raw("</tr></table></td>");
    }
</tr>

@if (pagination != null)
{
    <div ng-init="UpdatePageSize(@pageSize)"></div>
    <tr>
        <td colspan="@(gridColumnCount + 2)">
            <div class="pagination menu justify-content-center" ng-init="GridPagination['@ViewBag.GridSearchModelName'] = 1">
                <a href="#" class="page-item" ng-class="{disabled: GridPagination['@ViewBag.GridSearchModelName'] <= 1}" ng-click="NavigateToPage('@ViewBag.GridSearchModelName', 1)" title="First&#10;Go to the first page">
                    <i class="fa fa-angle-double-left" style="font-weight: bold; font-size: 1.3em;"></i>
                </a>
                <a href="#" class="page-item" ng-class="{disabled: GridPagination['@ViewBag.GridSearchModelName'] <= 1}" title="Previous&#10;Go to the previous page."
                   ng-click="NavigateToPage('@ViewBag.GridSearchModelName', GridPagination['@ViewBag.GridSearchModelName'] - 1)" ng-disabled="GridPagination['@ViewBag.GridSearchModelName'] <= 1" aria-label="Previous">
                    <i aria-hidden="true" class="fa fa-chevron-left"></i>
                </a>
                <a class="page-item disabled">Page {{ GridPagination["@ViewBag.GridSearchModelName"] }} out of {{ GetTotalPages(@(detailMetadata).length) }}</a>
                <a href ="#" class="page-item" ng-class="{disabled: GridPagination['@ViewBag.GridSearchModelName'] === GetTotalPages(@(detailMetadata).length)}"
                   ng-click="NavigateToPage('@ViewBag.GridSearchModelName', GridPagination['@ViewBag.GridSearchModelName'] + 1)"
                   ng-disabled="GridPagination['@ViewBag.GridSearchModelName'] === GetTotalPages(@(detailMetadata).length)" aria-label="Next" title="Next&#10;Go to the next page.">
                    <i aria-hidden="true" class="fa fa-chevron-right"></i>
                </a>
                <a href="#" class="page-item" ng-class="{disabled: GridPagination['@ViewBag.GridSearchModelName'] === GetTotalPages(@(detailMetadata).length)}"
                   ng-click="NavigateToPage('@ViewBag.GridSearchModelName', GetTotalPages(@(detailMetadata).length))" aria-label="Last" title="Last&#10;Go to the last page.">
                    <i class="fa fa-angle-double-right" style="font-weight: bold; font-size: 1.3em;"></i>
               </a>
            </div>
        </td>
    </tr>
}