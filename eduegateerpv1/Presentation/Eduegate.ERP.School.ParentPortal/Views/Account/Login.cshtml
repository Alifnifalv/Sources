@model Eduegate.ERP.Admin.Models.LoginViewModel

@{
    Layout = null;
    ViewBag.Title = "Log in";
    var settings = new Eduegate.Service.Client.SettingServiceClient(null);
    var isMultiCompany = Eduegate.Framework.Extensions.ConfigurationExtensions.GetAppConfigValueWithDefault<bool>("IsMultiCompany", false);
}

<!DOCTYPE html>
<html lang="en" ng-app="Eduegate.ERP.School.Portal">
<head>
    <title>@Eduegate.Framework.Extensions.ConfigurationExtensions.GetAppConfigValue("PortalTitle")</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0" name="viewport">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/angular")

    @Scripts.Render("~/bundles/appmodels")
    @Scripts.Render("~/bundles/plugins")
    @Scripts.Render("~/bundles/others")
    @Scripts.Render("~/bundles/jslinq")
    @Scripts.Render("~/bundles/highchart")
    <script src="~/Scripts/ng-map.min.js" type="text/javascript"></script>
    <style>
        .preload-overlay {
            display: none;
            background: #000;
            height: 100%;
            left: 0;
            opacity: 0.4;
            filter: alpha(opacity=20);
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }
    </style>
</head>

<body ng-controller="LoginController" ng-init="Init(@Newtonsoft.Json.JsonConvert.SerializeObject(Model))">
    <div id="LoginOverlay" class="preload-overlay">
        <div id="LoginButtonLoader" class="preloadImg">
            <div class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
        </div>
    </div>
    <div class="pageContainer loginPage fullWidth fullHeight">
        <div class="loginWrap">
            <div class="login twoColumn fullWidth fullHeight">
                <div class="column leftcol"></div>
                <div class="column rightcol">
                    <div class="flexFull fieldWrapper fullWidth fullHeight">

                        <div class="formWrap inputFields">
                            <div class="logo"><img src="~/img/PODARLOGO-01.png" /></div>
                            <br /><br />
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmLogin", @ng_submit = "Signin($event);" }))
                            {


                                @*<div class="successMsg displayBlock">
                                        <span class="success displayBlock text-left">
                                            <span class="tickIcon"></span>An email has been sent to your registered email id to reset password
                                        </span>
                                    </div>*@
                                @*<div class="displaylineBlock fullWidth fieldWrap">
                                        <input type="text" name="username" placeholder="Enter the registered Email ID" />
                                        <span class="validateError fullWidth fLeft text-left">Not a registered Email ID</span>
                                    </div>*@

                        <div class="form-group  mgbt-xs-20 loginfields">
                            <div class="displaylineBlock fullWidth fieldWrap">
                                <span>
                                    <label>
                                        @Html.RadioButtonFor(x => x.LoginType, "UserID", new { @class = "required", @ng_model = "LoginModel.LoginType" })
                                        <span>User ID </span>
                                    </label>&nbsp;&nbsp;
                                </span>
                                <span>
                                    <label>
                                        @Html.RadioButtonFor(x => x.LoginType, "Email", new { @class = "required", @ng_model = "LoginModel.LoginType" })
                                        <span>Email ID </span>
                                    </label>
                                </span>
                            </div>
                            <div class="displaylineBlock fullWidth fieldWrap" ng-if="LoginModel.LoginType !== 'Email'">
                                <span class="field-validation-error textleft ng-cloak" ng-show="IsEmailPasswordIncorrect">User ID/Password is incorrect or else no access to this user!</span>
                                <label class="col-md-6 control-label fullWidth fLeft text-left">User ID</label>
                                @Html.TextBoxFor(model => model.LoginUserID, new { @class = "required inputFields", @ng_model = "LoginModel.LoginUserID", @placeholder = "Enter the User ID" })
                                @Html.ValidationMessageFor(m => m.LoginUserID, null, new { @class = "validateError fullWidth fLeft text-left" })
                            </div>
                            <div class="displaylineBlock fullWidth fieldWrap" ng-if="LoginModel.LoginType === 'Email'">
                                <span class="field-validation-error textleft ng-cloak" ng-show="IsEmailPasswordIncorrect">Email/Password is incorrect or else no access to this user!</span>
                                <label class="col-md-6 control-label fullWidth fLeft text-left">Email ID</label>
                                @Html.TextBoxFor(model => model.Email, new { @type = "email", @class = "required inputFields", @ng_model = "LoginModel.Email", @ng_keyup = "EmailKeyup();", @placeholder = "Enter the registered email" })
                                @Html.ValidationMessageFor(m => m.Email, null, new { @class = "validateError fullWidth fLeft text-left" })
                            </div>
                            <div class="displaylineBlock fullWidth fieldWrap">
                                <label class="col-md-6 control-label fullWidth fLeft text-left">Password</label>
                                @Html.PasswordFor(m => m.Password, new { @class = "required", @ng_model = "LoginModel.Password", @ng_keyup = "PasswordKeyup();", @placeholder = "Password" })
                                @Html.ValidationMessageFor(m => m.Password, null, new { @class = "validateError fullWidth fLeft text-left" })
                            </div>
                        </div>
                                <div class="displaylineBlock fullWidth fieldWrap">
                                    <input type="submit" value="Submit" id="submitbtn" />
                                    @*@Html.EditorFor(m => m.Email) <br />*@


                                    @*@Html.TextBoxFor(model => model.Email, new { @type = "email", @class = "required inputFields", @ng_model = "LoginModel.Email"})*@
                                    @*@Html.ValidationMessageFor(m => m.Email, null, new { @class = "validateError fullWidth fLeft text-left" })*@

                                </div>
                            }

                            <div class="displaylineBlock fullWidth fieldWrap">
                                <label>Need an account?</label>
                                @Html.ActionLink("Register", "Register", "Account")
                            </div>

                        </div>
                        <!---forgot Password-->
                        <div class="displaylineBlock fullWidth fieldWrap">
                            @Html.ActionLink("Forgot password?", "ResetPassword", "Account")
                        </div>

                        <!--------------------------------------------------------------------------------->

                    </div>
                </div>
            </div>
        </div>

    </div><!--loginPage-->


    <script type="text/javascript">
       utility.myHost = "@string.Format("{0}://{1}{2}/", Request.Url.Scheme, Request.Url.Authority, HttpRuntime.AppDomainAppVirtualPath)";
        $.validator.unobtrusive.parse($('#frmLogin'));

        ////Disable Back Button In All Browsers.
        //function DisableBackButtonAllBrowsers() {
        //    window.history.forward()
        //};
        //DisableBackButtonAllBrowsers();
        //window.onload = DisableBackButtonAllBrowsers;
        //window.onpageshow = function (evts) { if (evts.persisted) DisableBackButtonAllBrowsers(); };
        //window.onunload = function () { void (0) };
        $("#target").submit(function (event) {
            $("#LoginOverlay").show();
            $("#submitbtn").trigger();
        });
    </script>

</body>
</html>
