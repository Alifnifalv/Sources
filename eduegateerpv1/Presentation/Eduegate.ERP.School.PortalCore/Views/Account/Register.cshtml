@model Eduegate.ERP.Admin.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
    var settingBL = new Eduegate.Domain.Setting.SettingBL(null);
    var portalTitle = settingBL.GetSettingValue<string>("PortalTitle");
}

<!DOCTYPE html>
<html lang="en" ng-app="Eduegate.ERP.School.Portal">
<head>
    <title>@portalTitle</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0" name="viewport">
    <link rel="stylesheet" href="~/Content/font-awesome.min.css" />
    <link rel="stylesheet" href="~/Content/bootstrap.css" />
    <link rel="stylesheet" href="~/Content/normalize.css" />
    <link rel="stylesheet" href="~/Content/materialize.min.css" />
    <link rel="stylesheet" href="~/Content/c3.css" />
    <link rel="stylesheet" href="~/Content/main.css" />

    @* @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/angular")

    @Scripts.Render("~/bundles/appmodels")
    @Scripts.Render("~/bundles/plugins")
    @Scripts.Render("~/bundles/others")
    @Scripts.Render("~/bundles/jslinq")
    @Scripts.Render("~/bun dles/highchart")*@
    <script src="~/Scripts/ng-map.min.js" type="text/javascript"></script>
    <style>
        .preload-overlay {
            display: none;
            background: #000;
            height: 100%;
            left: 0;
            opacity: 0.4;
            filter: alpha(opacity=20);
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }
    </style>
</head>
<body ng-controller="LoginController" ng-init="Init(@Newtonsoft.Json.JsonConvert.SerializeObject(Model))">
    @{
        var clientname = new Eduegate.Domain.FrameworkSettingBL(null).GetSettingValue<string>("CLIENTINSTANCE");
    }
    <div id="LoginOverlay" class="preload-overlay">
        <div id="LoginButtonLoader" class="preloadImg">
            <div class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
        </div>
    </div>
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "frmRegister", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="pageContainer registerPage fullWidth fullHeight">
            <div class="registerWrap">
                <div class="register twoColumn fullWidth fullHeight">
                    <div class="column leftcol">

                    </div>
                    <div class="column rightcol">
                        <div class="flexFull fieldWrapper fullWidth fullHeight">
                            <div class="formWrap inputFields">
                                <div class="logo"><img src="~/Clients/@clientname/img/PODARLOGO-01.png" /></div>
                                <br />
                                @*<h2>@ViewBag.Title</h2>*@
                                <h6>Create a new account</h6>
                                <br />
                                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                                <div id="Register_01">
                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        <label class="col-md-6 control-label fullWidth fLeft text-left">Email ID</label>
                                        @Html.TextBoxFor(m => m.Email, new { @class = "required inputFields", @placeholder = "Enter the Email", @ng_model = "LoginModel.Email", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.Email, null, new { @class = "validateError fullWidth fLeft text-left" })
                                    </div>

                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        <input type="button" class="btn btn-primary" onclick="OTPGenerate()" value="Next" />
                                    </div>
                                </div>
                                <div id="Register_02">
                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                        <label class="col-md-12 control-label">Verify OTP</label>
                                        <input type="number" id="otp" name="otp" class="inputFields" placeholder="Enter the OTP" autocomplete="off" />
                                    </div>
                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        <input type="button" class="btn btn-primary" onclick="VerifyOTP()" value="Next" />
                                    </div>
                                </div>
                                <div id="Register_03">
                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        <label class="col-md-6 control-label fullWidth fLeft text-left">Password</label>
                                        @Html.PasswordFor(m => m.Password, new { @class = "required", @placeholder = "Enter Password", @ng_model = "LoginModel.Password", @required = "required", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.Password, null, new { @class = "validateError fullWidth fLeft text-left" })
                                    </div>
                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        <label class="col-md-6 control-label fullWidth fLeft text-left">Confirm Password</label>
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "required", @placeholder = "Confirm Password", @ng_model = "LoginModel.ConfirmPassword", @required = "required" , @autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "validateError fullWidth fLeft text-left" })
                                    </div>
                                    <div class="displaylineBlock fullWidth fieldWrap">
                                        <input type="submit" value="Register" id="submit" name="submit" />
                                    </div>
                                </div>

                            </div>
                            <!---Redirect to Login-->
                            <div class="displaylineBlock fullWidth fieldWrap">
                                <label>Already have an account?</label>
                                @Html.ActionLink("Login", "Login", "Account")
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>


    }

    @*<script type="text/javascript">

            //Disable Back Button In All Browsers.
            function DisableBackButtonAllBrowsers() {
                window.history.forward()
            };
            DisableBackButtonAllBrowsers();
            window.onload = DisableBackButtonAllBrowsers;
            window.onpageshow = function (evts) { if (evts.persisted) DisableBackButtonAllBrowsers(); };
            window.onunload = function () { void (0) };
        </script>*@
    <style>
        #Register_02, #Register_03 {
            display: none;
        }

        .inputFields {
            padding: 0rem .5rem !important;
        }

        .control-label {
            padding-left: .5rem !important;
            padding-bottom: .5rem !important;
            text-align: left !important;
        }
    </style>
    <!-- end js include path -->
    <script src="~/Design_v02/plugins/jquery/jquery.min.js"></script>
    <link rel="stylesheet" href="~/ToasterPlugin/simple-notify.min.css" />
    <script src="~/ToasterPlugin/simple-notify.min.js"></script>
    <script src="~/Scripts/RegisterParent.js"></script>
</body>

</html>
