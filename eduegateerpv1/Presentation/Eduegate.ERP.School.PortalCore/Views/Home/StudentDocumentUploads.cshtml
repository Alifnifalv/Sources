
@{
    ViewBag.Title = "StudentDocumentUploads";
}

@model Eduegate.Web.Library.School.Students.StudentApplicationDocUploadViewModel
@{
    Layout = null;
    var Success = Context.Request.Query["Success"];
}

@using (Html.BeginForm("UploadContents", "Content", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "form1", @name = "form1" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="ReferenceID" name="ReferenceID" />
    <input type="hidden" id="UploadDocumentIID" name="UploadDocumentIID" />

    <div class="tab-content">
        <div class="tab-pane active fontawesome-demo" id="DocumentsUpload">
            <div id="biography">
                <div class="row">
                    <div class="col-md-12">
                        <h4 class="font-bold"></h4>
                        <hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card-head">
                                    <header style="padding: 11px 0px !important;"><i class="fa fa-file-o"></i>&nbsp;&nbsp;Documents Upload</header>
                                </div>
                                <ul class="list-group list-group-unbordered">
                                    <li class="list-group-item">
                                        <b>Birth Certificate</b>
                                        <div class="col-md-10">
                                            <input type="file" id="BirthCertificateFile" name="BirthCertificateFile" class="form-control" required accept=".jpg,.xlsx,.xls,.doc, .docx,.pdf" />
                                            @Html.ValidationMessageFor(model => model.BirthCertificateAttach, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="profile-desc-item pull-right">
                                            <button type="submit" id="BirthcertificateBtn" name="action" class="btn btn-danger btn-dark col-md-12" ng-click="submitStudentApplicationDocs()">Upload</button>
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <b>Student Passport</b>
                                        <div class="col-md-10">
                                            <input type="file" id="StudentPassportFile" name="StudentPassportFile" class="form-control" required accept=".jpg,.xlsx,.xls,.doc, .docx,.pdf" />
                                            @Html.ValidationMessageFor(model => model.StudentPassportAttach, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="profile-desc-item pull-right">
                                            <button type="submit" id="PassportBtn" name="action" class="btn btn-danger btn-dark col-md-12">Upload</button>
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <b>Father QID</b>
                                        <div class="col-md-10">
                                            <input type="file" id="FatherQIDFile" name="FatherQIDFile" class="form-control" required accept=".jpg,.xlsx,.xls,.doc, .docx,.pdf" />
                                            @Html.ValidationMessageFor(model => model.FatherQIDAttach, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="profile-desc-item pull-right">
                                            <button type="submit" id="FatherQIDBtn" name="action" class="btn btn-danger btn-dark col-md-12">Upload</button>
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <b>Mother QID</b>
                                        <div class="col-md-10">
                                            <input type="file" id="MotherQIDFile" name="MotherQIDFile" class="form-control" required accept=".jpg,.xlsx,.xls,.doc, .docx,.pdf" />
                                            @Html.ValidationMessageFor(model => model.MotherQIDAttach, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="profile-desc-item pull-right">
                                            <button type="submit" id="MotherQIDBtn" name="action" class="btn btn-danger btn-dark col-md-12">Upload</button>
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <b>Student QID</b>
                                        <div class="col-md-10">
                                            <input type="file" id="StudentQIDFile" name="StudentQIDFile" class="form-control" required accept=".jpg,.xlsx,.xls,.doc, .docx,.pdf" />
                                            @Html.ValidationMessageFor(model => model.StudentQIDAttach, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="profile-desc-item pull-right">
                                            <button type="submit" id="StudentQIDBtn" name="action" class="btn btn-danger btn-dark col-md-12">Upload</button>
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <b>TC</b>
                                        <div class="col-md-10">
                                            <input type="file" id="TCFile" name="TCFile" class="form-control" required accept=".jpg,.xlsx,.xls,.doc, .docx,.pdf" />
                                            @* @Html.ValidationMessageFor(model => model.TCFile, "", new { @class = "text-danger" }) *@
                                        </div>
                                        <div class="profile-desc-item pull-right">
                                            <button type="submit" id="TCBtn" name="action" class="btn btn-danger btn-dark col-md-12">Upload</button>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @* @Scripts.Render("~/bundles/jqueryval") *@
}
